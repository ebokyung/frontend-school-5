/* body {
    background: rosybrown;
} */
h2,
p {
    margin: 0;
}

.card-item {
    /* width: 288px; */
    background: #fff;
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    overflow: hidden;
}

.card-item a {
    text-decoration: none;
    color: #29363D;
    border-radius: 8px;
    overflow: hidden;
}

.card-item img {
    width: 100%;
    aspect-ratio: 288/196;
    object-fit: cover;
    vertical-align: top;
}

.card-text {
    padding: 24px 16px 16px 16px;
}

.card-text .title {
    font-size: 16px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.card-text .title+p {
    font-size: 12px;
    color: #5a6a72;
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    word-break: break-all;
    margin: 12px 0 16px;
    line-height: 20px;
    /*  */
    height: 40px;
}

.underline {
    text-decoration: underline;
    font-weight: bold;
    font-size: 14px;
    padding-left: 6px;
}





/* 0309 */
/* ---------------- grid ---------------- */
.grid-container {
    display: grid;
    /* 1. 이건 item에 288px 적용되어 있을때 가능 */
    /* grid-template-columns: repeat(4, 1fr); */

    /* 2. 4개씩 정렬 */
    /* grid-template-columns: repeat(4, minmax(288px, 1fr)); */

    /* 3. 반응형 */
    grid-template-columns: repeat(auto-fill, minmax(288px, 1fr));
    gap: 32px 24px;
    width: min(1224px, 100% - 60px);
    margin: auto;
}



/* ---------------- flex ---------------- */
.flex-container {
    display: flex;
    flex-wrap: wrap;
    gap: 32px 24px;
    width: min(1224px, 100% - 60px);
    margin: auto;
}

/* flex-1 */
.flex-container article {
    width: calc((100% - (24px * 3)) / 4);
    /* + 나머지 여백은 미디어 쿼리로 반응현 구현해야 함 */
}

@media (min-width: 641px) and (max-width: 1024px) {
    .flex-container article {
        width: calc((100% - (24px * 2)) / 3);
    }
}

@media (min-width: 501px) and (max-width: 640px) {
    .flex-container article {
        width: calc((100% -24px) / 2);
    }
}

@media (max-width: 500px) {
    .flex-container article {
        width: 100%;
    }
}

/* flex-2 확인필요 */
/* .flex-container article {
    flex-basis: 288px;
    flex-grow: 0;
    flex-shrink: 0;
} */



/* --------------- float ---------------- */
.float-container {
    width: min(1224px, 100% - 60px);
    margin: auto;
}

.float-container::after {
    /* 가상요소로 자식들 부모에서 빠져나가는 거 해결 */
    content: '';
    display: block;
    clear: both;
}

.float-container article {
    float: left;
    width: calc((100% - (24px * 3)) / 4);
    margin: 0 0 32px 24px;
}

@media (1025px <=width) {
    /*  1025px 이상은 이 블록 안에 코드 적용 */
}

@media (min-width: 1025px) {
    .float-container article:nth-child(4n-3) {
        /* 첫 번째 열 마진 없애기 -> 모든 미디어쿼리에 적용*/
        margin-left: 0;
    }
}

@media (min-width: 641px) and (max-width: 1024px) {
    .float-container article {
        width: calc((100% - (24px * 2)) / 3);
    }

    .float-container article:nth-child(3n-2) {
        margin-left: 0;
    }
}

@media (min-width: 501px) and (max-width: 640px) {
    .float-container article {
        width: calc((100% - 24px) / 2);
    }

    .float-container article:nth-child(2n-1) {
        margin-left: 0;
    }
}

@media (max-width: 500px) {
    .float-container article {
        width: 100%;
        margin-left: 0;
    }
}